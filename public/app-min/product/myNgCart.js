!function(){"use strict";angular.module("ngCart",["ngCart.directives","ngLodash"]).config([function(){}]).provider("$ngCart",function(){this.$get=function(){}}).run(["$rootScope","ngCart","ngCartItem","store",function(t,e,n,r){}]).service("ngCart",["$rootScope","$window","ngCartItem","store",function(t,e,n,r){var i,o=this;this.init=function(t){i={shipping:null,taxRate:null,tax:null,items:[],storeKey:t||"ngShop"}},this.setStoreKey=function(t){i.storeKey=t},this.addItem=function(e){var r=this.getItemById(e._id);return"object"==typeof r?(r.setName(name),r.setPrice(price),r.setQuantity(quantity,!1),r.weight=e.weight,r.image=e.image,t.$broadcast("ngCart:itemUpdated",r)):(r=e instanceof n?e:new n(e),i.items.push(r),t.$broadcast("ngCart:itemAdded",r)),t.$broadcast("ngCart:change"),r},this.getItemById=function(t){var e=!1;return i.items.some(function(n){return n.getId()===t&&(e=n,!0)}),e},this.isItemInCart=function(t){return i.items.some(function(e){return e.getId()===t})},this.setShipping=function(t){return i.shipping=t,this.getShipping()},this.getShipping=function(){return 0==i.items.length?0:i.shipping},this.setTaxRate=function(t){return i.taxRate=+parseFloat(t).toFixed(2),this.getTaxRate()},this.getTaxRate=function(){return i.taxRate},this.getTax=function(){return+parseFloat(this.getSubTotal()/100*this.getCart().taxRate).toFixed(2)},this.setCart=function(t){return i=t},this.getCart=function(){return i},this.getItems=function(){return i.items},this.getTotalItems=function(){var t=0,e=this.getItems();return angular.forEach(e,function(e){t+=e.getQuantity()}),t},this.getTotalUniqueItems=function(){return i.items.length},this.getSubTotal=function(){var t=0;return angular.forEach(i.items,function(e){t+=e.getTotal()}),+parseFloat(t).toFixed(2)},this.totalCost=function(){return+parseFloat(this.getSubTotal()+this.getShipping()+this.getTax()).toFixed(2)},this.removeItem=function(e){var n=i.items.splice(e,1)[0]||{};t.$broadcast("ngCart:itemRemoved",n),t.$broadcast("ngCart:change")},this.removeItemById=function(e){var n=i;angular.forEach(n.items,function(t,r){t.getId()===e&&(t=n.items.splice(r,1)[0]||{})}),this.setCart(n),t.$broadcast("ngCart:itemRemoved",void 0),t.$broadcast("ngCart:change")},this.empty=function(){t.$broadcast("ngCart:change"),i.items=[],e.localStorage.removeItem(i.storeKey)},this.isEmpty=function(){return!(i.items.length>0)},this.toObject=function(){if(0===this.getItems().length)return!1;var t=[];return angular.forEach(this.getItems(),function(e){t.push(e.toObject())}),{shipping:this.getShipping(),tax:this.getTax(),taxRate:this.getTaxRate(),subTotal:this.getSubTotal(),totalCost:this.totalCost(),items:t}},this.$restore=function(t){var e;e=t?r.get(t):r.get(i.storeKey),i.items=[],i.shipping=e.shipping,i.tax=e.tax,angular.forEach(e.items,function(t){i.items.push(new n(t))}),this.$save()},this.dataIsValid=function(){return!(i.items.length>0)||i.items.every(function(t){return!isNaN(t.getTotal())})},this.$save=function(){if(this.dataIsValid())return r.set(i.storeKey,JSON.stringify(i))},t.$on("ngCart:change",function(){o.$save()})}]).factory("ngCartItem",["$rootScope","$log","lodash",function(t,e,n){var r=function(t){n.assign(this,t)};return r.prototype.setId=function(t){t?this._id=t:e.error("An ID must be provided")},r.prototype.getId=function(){return this._id},r.prototype.setName=function(t){t?this.name=t:e.error("A name must be provided")},r.prototype.getName=function(){return this.name},r.prototype.setPrice=function(t){var n=parseFloat(t);n?n<=0?e.error("A price must be over 0"):this.price=n:e.error("A price must be provided")},r.prototype.getPrice=function(){return this.price},r.prototype.setQuantity=function(t,n){var r=parseInt(t);r%1==0?(!0===n?this.quantity+=r:this.quantity=r,this.quantity<1&&(this.quantity=1)):(this.quantity=1,e.info("Quantity must be an integer and was defaulted to 1"))},r.prototype.getQuantity=function(){return this.quantity},r.prototype.setData=function(t){t&&(this.data=t)},r.prototype.getData=function(){if(this.data)return this.data;e.info("This item has no data")},r.prototype.getTotal=function(){return+parseFloat(this.getQuantity()*this.getPrice()).toFixed(2)},r.prototype.toObject=function(){return{id:this.getId(),name:this.getName(),price:this.getPrice(),quantity:this.getQuantity(),data:this.getData(),total:this.getTotal()}},r}]).service("store",["$window",function(t){return{get:function(e){var n=t.localStorage.getItem(e);if(n){var r=angular.fromJson(n);return JSON.parse(r)}return!1},set:function(e,n){return void 0===n?t.localStorage.removeItem(e):t.localStorage.setItem(e,angular.toJson(n)),t.localStorage.getItem(e)}}}]).controller("CartController",["$scope","ngCart",function(t,e){t.ngCart=e}]).value("version","1.0.0"),angular.module("ngCart.directives",["ngCart.fulfilment"]).controller("CartController",["$scope","ngCart",function(t,e){t.ngCart=e}]).directive("ngcartAddtocart",["ngCart",function(t){return{restrict:"E",controller:"CartController",scope:{id:"@",name:"@",quantity:"@",quantityMax:"@",price:"@",data:"="},transclude:!0,templateUrl:function(t,e){return void 0===e.templateUrl?"template/ngCart/addtocart.html":e.templateUrl},link:function(e,n,r){e.attrs=r,e.inCart=function(){return t.getItemById(r.id)},e.inCart()?e.q=t.getItemById(r.id).getQuantity():e.q=parseInt(e.quantity),e.qtyOpt=[];for(var i=1;i<=e.quantityMax;i++)e.qtyOpt.push(i)}}}]).directive("ngcartCart",[function(){return{restrict:"E",controller:"CartController",scope:{},templateUrl:function(t,e){return void 0===e.templateUrl?"template/ngCart/cart.html":e.templateUrl},link:function(t,e,n){}}}]).directive("ngcartSummary",[function(){return{restrict:"E",controller:"CartController",scope:{},transclude:!0,templateUrl:function(t,e){return void 0===e.templateUrl?"template/ngCart/summary.html":e.templateUrl}}}]).directive("ngcartCheckout",[function(){return{restrict:"E",controller:["$rootScope","$scope","ngCart","fulfilmentProvider",function(t,e,n,r){e.ngCart=n,e.checkout=function(){r.setService(e.service),r.setSettings(e.settings),r.checkout().success(function(e,n,r,i){t.$broadcast("ngCart:checkout_succeeded",e)}).error(function(e,n,r,i){t.$broadcast("ngCart:checkout_failed",{statusCode:n,error:e})})}}],scope:{service:"@",settings:"="},transclude:!0,templateUrl:function(t,e){return void 0===e.templateUrl?"template/ngCart/checkout.html":e.templateUrl}}}]),angular.module("ngCart.fulfilment",[]).service("fulfilmentProvider",["$injector",function(t){this._obj={service:void 0,settings:void 0},this.setService=function(t){this._obj.service=t},this.setSettings=function(t){this._obj.settings=t},this.checkout=function(){return t.get("ngCart.fulfilment."+this._obj.service).checkout(this._obj.settings)}}]).service("ngCart.fulfilment.log",["$q","$log","ngCart",function(t,e,n){this.checkout=function(){var r=t.defer();return e.info(n.toObject()),r.resolve({cart:n.toObject()}),r.promise}}]).service("ngCart.fulfilment.http",["$http","ngCart",function(t,e){this.checkout=function(n){return t.post(n.url,{data:e.toObject(),options:n.options})}}]).service("ngCart.fulfilment.paypal",["$http","ngCart",function(t,e){}])}();